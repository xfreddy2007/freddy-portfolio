{"version":3,"sources":["components/UI/Modal/Modal.module.css","components/UI/Input/Input.js","components/UI/Modal/Modal.js","containers/Contact/Contact.js","../node_modules/emailjs-com/source/index.js","../node_modules/emailjs-com/source/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/source/services/ui/UI.js","components/UI/Input/Input.module.css"],"names":["module","exports","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","className","elementConfig","value","name","onChange","changed","join","label","modal","Aux","Backdrop","show","clicked","modalClosed","Modal","style","transform","opacity","children","React","memo","prevProps","nextProps","Contact","useState","elementName","elementInput","type","placeholder","validation","required","valid","email","isEmail","message","contactForm","setContactForm","useEffect","init","formIsValid","setFormIsValid","isLoading","setIsLoading","isError","setIsError","emailResult","Spinner","formElementsArray","key","id","config","buttonClass","form","onSubmit","e","preventDefault","emailjs","sendForm","target","then","response","console","log","status","text","error","map","formElement","Input","event","inputIdentifier","updatedFormElement","updateObject","checkValidity","updatedContactForm","inputChangedHandler","disabled","class","Object","defineProperty","EmailJSResponseStatus","send","EmailJSResponseStatus_1","require","enumerable","get","UI_1","_userID","_origin","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","setRequestHeader","appendGoogleCaptcha","templatePrams","element","document","getElementById","userID","origin","serviceID","templateID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","selector","querySelector","nodeName","UI","progressState","formData","FormData","append","successState","errorState","default","httpResponse","this","responseText","clearAll","classList","remove","PROGRESS","DONE","ERROR","add"],"mappings":"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","file":"static/js/3.88b191bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input \n                className=\"my-2 w-24 h-8 xl:w-56 lg:w-48 md:w-40 sm:w-32 rounded-md shadow-sm ring-2 ring-indigo-800 focus:outline-none focus:ring-red-500 block\" \n                {...props.elementConfig} \n                value={props.value}\n                name={props.name}\n                onChange={props.changed}/>;\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n                className=\"my-2 w-48 h-100 xl:w-96 lg:w-84 md:w-72 sm:w-60 rounded-md shadow-sm ring-2 ring-indigo-800 focus:outline-none focus:ring-red-500 block\" \n                {...props.elementConfig} \n                value={props.value}\n                name={props.name}\n                onChange={props.changed}/>;\n            break;\n        default:\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                name={props.name}\n                onChange={props.changed}/>;\n    }\n\n    return (\n        <div>\n            <label className=\"text-sm xl:text-lg md:text-md block\">{props.label}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default input;","import React from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = props =>{\n    // shouldComponentUpdate( nextProps, nextState ) {\n    //     return nextProps.show !== props.show || nextProps.children !== props.children;\n    // }\n\n    return (\n        <Aux>\n            <Backdrop show={props.show} clicked={props.modalClosed}/>\n            <div \n                className={classes.Modal}\n                style={{\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                {props.children}\n            </div>\n        </Aux>\n    );\n}\n\nexport default React.memo(modal, (prevProps, nextProps) => nextProps.show === prevProps.show && nextProps.children === prevProps.children);","import React, { useState, useEffect } from 'react';\nimport emailjs from 'emailjs-com';\nimport { init } from 'emailjs-com';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Input from '../../components/UI/Input/Input';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { updateObject, checkValidity } from '../../shared/utility';\n\nconst Contact = props => {\n    const [contactForm, setContactForm] = useState({\n        name: {\n            elementName: 'Name',\n            elementInput: 'user_name',\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: ' Your Name'\n            },\n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        email: {\n            elementName: 'Email',\n            elementInput: 'user_email',\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: ' Your E-Mail'\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false\n        },\n        message: {\n            elementName: 'Message',\n            elementInput: 'message',\n            elementType: 'textarea',\n            elementConfig: {\n                type: 'text',\n                placeholder: ' Want to say something?'\n            },\n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        }\n    });\n\n    useEffect(() => init(\"user_X9kgtqlsTa8Bzfr5s9Kpa\"), []);\n\n    const [formIsValid, setFormIsValid] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    const inputChangedHandler = (event, inputIdentifier) => {\n        const updatedFormElement = updateObject(contactForm[inputIdentifier], {\n            value: event.target.value,\n            valid: checkValidity(event.target.value, contactForm[inputIdentifier].validation),\n            touched: true\n        });\n        const updatedContactForm = updateObject(contactForm, {\n            [inputIdentifier]: updatedFormElement\n        });\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedContactForm) {\n            formIsValid = updatedContactForm[inputIdentifier].valid && formIsValid;\n        }\n        setContactForm(updatedContactForm);\n        setFormIsValid(formIsValid);\n    };\n\n    let emailResult = null;\n    if (isLoading) {\n        emailResult = <Spinner />;\n    }\n\n    const sendEmailHandler = (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        emailjs.sendForm('service_v72nvfp', 'template_fm53pm1', e.target, 'user_X9kgtqlsTa8Bzfr5s9Kpa')\n            .then((response) => {\n                console.log('SUCCESS!', response.status, response.text);\n                setIsLoading(false);\n            }, (error) => {\n                console.log('FAILED', error);\n                setIsError(true);\n                setIsLoading(false);\n            });\n    }\n\n    const formElementsArray = [];\n    for (let key in contactForm) {\n        formElementsArray.push({\n            id: key,\n            config: contactForm[key]\n        });\n    };\n\n    const buttonClass = formIsValid ? \"mt-2 w-28 p-2 items-center rounded-lg bg-indigo-800 text-gray-50 font-serif cursor-pointer\" : \"mt-2 w-28 p-2 items-center rounded-lg bg-gray-500 text-gray-50 font-serif cursor-not-allowed\"\n\n    let form = (\n        <form onSubmit={sendEmailHandler} className=\"flex flex-col mx-5 mb-4 xl:mb-16 lg:mb-12 md:mb-8 font-serif\">\n            <input type=\"hidden\" name=\"contact_number\" />\n            {formElementsArray.map(formElement => (\n                <Input\n                    key={formElement.id}\n                    elementType={formElement.config.elementType} \n                    elementConfig={formElement.config.elementConfig} \n                    label={formElement.config.elementName}\n                    name={formElement.config.elementInput}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation}\n                    touched={formElement.config.touched}\n                    changed={(event) => inputChangedHandler(event, formElement.id)} />\n            ))}\n            <input type=\"submit\" value=\"Submit\" className={buttonClass} disabled={!formIsValid}/>\n        </form>\n    );\n\n    return (\n        <Aux>\n            {isError && <Modal show={isError} modalClosed={() => setIsError(false)}>Failed to send Email!</Modal>}\n            <div className=\"w-full min-h-xl justify-start flex flex-col xl:mt-32 lg:mt-28 md:mt-24 sm:mt-20 px-4 xl:px-32 lg:px-24 md:px-16 sm:px-8 font-sans text-indigo-800\">\n                <h1 class=\"w-4/5 text-lg mx-5 mt-16 font-bold xl:text-8xl lg:text-6xl md:text-4xl sm:text-2xl tracking-wider\">Have a desire to work together with me?</h1>\n                <div class=\"xl:w-3/5 md:w-3/4 sm:w-full font-serif\">\n                    <p class=\"text-sm mx-5 my-4 xl:text-lg md:text-md\">I'm really excited to chat with other developers, designers, or others. Feel free to leave a message for me if you would like to have a conversation.</p>\n                </div>\n                <h2 class=\"text-lg mx-5 font-bold my-4 xl:text-4xl lg:text-3xl md:text-2xl sm:text-xl\">Let's talk together!</h2>\n                {form}\n                {emailResult}\n            </div>\n        </Aux>\n\n    );\n};\n\nexport default Contact;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmailJSResponseStatus = exports.sendForm = exports.send = exports.init = void 0;\nvar EmailJSResponseStatus_1 = require(\"./models/EmailJSResponseStatus\");\nObject.defineProperty(exports, \"EmailJSResponseStatus\", { enumerable: true, get: function () { return EmailJSResponseStatus_1.EmailJSResponseStatus; } });\nvar UI_1 = require(\"./services/ui/UI\");\nvar _userID = null;\nvar _origin = 'https://api.emailjs.com';\nfunction sendPost(url, data, headers) {\n    if (headers === void 0) { headers = {}; }\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', function (event) {\n            var responseStatus = new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', function (event) {\n            reject(new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target));\n        });\n        xhr.open('POST', url, true);\n        for (var key in headers) {\n            xhr.setRequestHeader(key, headers[key]);\n        }\n        xhr.send(data);\n    });\n}\nfunction appendGoogleCaptcha(templatePrams) {\n    var element = document && document.getElementById('g-recaptcha-response');\n    if (element && element.value) {\n        templatePrams['g-recaptcha-response'] = element.value;\n    }\n    element = null;\n    return templatePrams;\n}\nfunction fixIdSelector(selector) {\n    if (selector[0] !== '#' && selector[0] !== '.') {\n        return '#' + selector;\n    }\n    return selector;\n}\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nfunction init(userID, origin) {\n    _userID = userID;\n    _origin = origin || 'https://api.emailjs.com';\n}\nexports.init = init;\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {Object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nfunction send(serviceID, templateID, templatePrams, userID) {\n    var params = {\n        lib_version: '2.6.4',\n        user_id: userID || _userID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: appendGoogleCaptcha(templatePrams)\n    };\n    return sendPost(_origin + '/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json'\n    });\n}\nexports.send = send;\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nfunction sendForm(serviceID, templateID, form, userID) {\n    if (typeof form === 'string') {\n        form = document.querySelector(fixIdSelector(form));\n    }\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'Expected the HTML form element or the style selector of form';\n    }\n    UI_1.UI.progressState(form);\n    var formData = new FormData(form);\n    formData.append('lib_version', '2.6.4');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', userID || _userID);\n    return sendPost(_origin + '/api/v1.0/email/send-form', formData)\n        .then(function (response) {\n        UI_1.UI.successState(form);\n        return response;\n    }, function (error) {\n        UI_1.UI.errorState(form);\n        return Promise.reject(error);\n    });\n}\nexports.sendForm = sendForm;\nexports.default = {\n    init: init,\n    send: send,\n    sendForm: sendForm\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmailJSResponseStatus = void 0;\nvar EmailJSResponseStatus = /** @class */ (function () {\n    function EmailJSResponseStatus(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n    return EmailJSResponseStatus;\n}());\nexports.EmailJSResponseStatus = EmailJSResponseStatus;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UI = void 0;\nvar UI = /** @class */ (function () {\n    function UI() {\n    }\n    UI.clearAll = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.remove(this.DONE);\n        form.classList.remove(this.ERROR);\n    };\n    UI.progressState = function (form) {\n        this.clearAll(form);\n        form.classList.add(this.PROGRESS);\n    };\n    UI.successState = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.add(this.DONE);\n    };\n    UI.errorState = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.add(this.ERROR);\n    };\n    UI.PROGRESS = 'emailjs-sending';\n    UI.DONE = 'emailjs-success';\n    UI.ERROR = 'emailjs-error';\n    return UI;\n}());\nexports.UI = UI;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};"],"sourceRoot":""}